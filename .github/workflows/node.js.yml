name: Node.js CI

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]
    workflow_dispatch: # Allow manual triggering

permissions:
    contents: read
    pull-requests: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install Node.js dependencies
              run: npm ci

            - name: Verify dependencies
              run: |
                  npm list react-scripts || npm install react-scripts --save-dev

            - name: Build app
              run: npm run build

            - name: Run Jest tests
              run: npm run test:jest

    robot-tests:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Verify dependencies
              run: |
                  npm list react-scripts || npm install react-scripts --save-dev

            - name: Build app
              run: npm run build

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install Robot Framework and Browser Library
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  rfbrowser init

            - name: Start server and run Robot tests
              run: |
                  npx serve -s build -l 3000 &
                  SERVER_PID=$!

                  # Wait for server to be ready
                  for i in {1..10}; do
                    if curl --silent --fail http://localhost:3000 > /dev/null; then
                      echo "Server is ready!"
                      break
                    fi
                    echo "Waiting for server to start... (attempt $i/10)"
                    sleep 3
                    if [ $i -eq 10 ]; then
                      echo "Server failed to start after 30 seconds"
                      exit 1
                    fi
                  done

                  # Run tests
                  robot --outputdir results tests/robot/
                  TEST_EXIT_CODE=$?

                  # Kill the server
                  kill $SERVER_PID

                  # Return the test exit code
                  exit $TEST_EXIT_CODE

            - name: Upload test results
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: robot-test-results
                  path: results/
